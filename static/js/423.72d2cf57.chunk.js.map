{"version":3,"file":"static/js/423.72d2cf57.chunk.js","mappings":"qKA0CA,EAtCkB,SAAC,GAGf,IAHoE,IAApDA,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,YAC9CC,EAAaC,KAAKC,KAAKN,EAAaC,GACpCM,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAME,EAAe,SAACC,EAAMR,GAEpBD,EADAS,EACcR,EAAY,EAEZA,EAAY,IAIlC,OACE,gBAAIS,UAAW,oCAAf,WACI,yBACI,gBAAKA,UAA4B,IAAhBT,GAAqBA,IAAgBI,EAAMM,OACxD,iBACA,eACAC,I,ywMAAWC,QAAS,kBAAML,GAAa,EAAMP,QAEpDI,EAAMS,KAAK,SAACC,GACT,GAAIA,EAAId,GAAec,EAAId,EAAY,GAAMc,EAAId,GAAec,EAAId,EAAY,GACzEc,IAAMV,EAAMM,QAAUI,IAAMd,GAAqB,IAANc,EAC9C,OAAO,eAAIL,UAAaK,IAAMd,EAAe,mBAAqB,YAClEY,QAAS,kBAAMb,EAAce,IADtB,SAEFA,QAIb,yBACI,gBAAKH,I,yjMAAYC,QAAS,kBAAML,GAAa,EAAOP","sources":["Components/Users/Paginator/Paginator.jsx"],"sourcesContent":["import './Paginator.scss';\r\nimport left from '../../../icons/angle-left.png';\r\nimport right from '../../../icons/angle-right.png';\r\n\r\nconst Paginator = ({totalCount, count, onPageChanged, currentPage}) => {\r\n    let pagesCount = Math.ceil(totalCount / count);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const onArrowClick = (back, currentPage) =>{\r\n        if (back) {\r\n            onPageChanged(currentPage-1)\r\n        } else {\r\n            onPageChanged(currentPage+1)\r\n        }\r\n    }\r\n\r\n    return (\r\n      <ul className={'pagination justify-content-center'}>\r\n          <li>\r\n              <img className={(currentPage === 1 || currentPage === pages.length) ?\r\n                  'disabled-arrow' :\r\n                  'active-arrow'}\r\n                  src={left} onClick={() => onArrowClick(true, currentPage)}/>\r\n          </li>\r\n          {pages.map( (p) => {\r\n              if((p < currentPage && p > currentPage-5)|| (p > currentPage && p < currentPage+5 )\r\n                  || p === pages.length || p === currentPage || p === 1) {\r\n                  return <li className={ (p === currentPage) ? 'page-item active' : 'page-item'}\r\n                  onClick={() => onPageChanged(p)}>\r\n                      {p}\r\n                  </li>\r\n              }\r\n          })}\r\n          <li>\r\n              <img src={right} onClick={() => onArrowClick(false, currentPage)}/>\r\n          </li>\r\n      </ul>\r\n  )\r\n}\r\nexport default Paginator;"],"names":["totalCount","count","onPageChanged","currentPage","pagesCount","Math","ceil","pages","i","push","onArrowClick","back","className","length","src","onClick","map","p"],"sourceRoot":""}